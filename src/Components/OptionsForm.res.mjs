// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Input from "./Input.res.mjs";
import * as Select from "./Select.res.mjs";
import * as JsxRuntime from "react/jsx-runtime";

function OptionsForm(props) {
  var onChange = props.onChange;
  var options = props.options;
  var match = options.fillRule;
  var match$1 = options.align;
  return JsxRuntime.jsxs(JsxRuntime.Fragment, {
              children: [
                JsxRuntime.jsxs("div", {
                      children: [
                        JsxRuntime.jsx(Input.make, {
                              label: "Text",
                              value: options.text,
                              onChange: (function (value) {
                                  onChange({
                                        text: Input.getText(value),
                                        fontSize: options.fontSize,
                                        canvasWidth: options.canvasWidth,
                                        letterSpacing: options.letterSpacing,
                                        lineHeight: options.lineHeight,
                                        align: options.align,
                                        fill: options.fill,
                                        stroke: options.stroke,
                                        strokeWidth: options.strokeWidth,
                                        fillRule: options.fillRule
                                      });
                                }),
                              className: "w-full"
                            }),
                        JsxRuntime.jsx(Input.make, {
                              type_: "number",
                              label: "Size",
                              value: options.fontSize.toString(),
                              onChange: (function (value) {
                                  onChange({
                                        text: options.text,
                                        fontSize: Input.getInt(value),
                                        canvasWidth: options.canvasWidth,
                                        letterSpacing: options.letterSpacing,
                                        lineHeight: options.lineHeight,
                                        align: options.align,
                                        fill: options.fill,
                                        stroke: options.stroke,
                                        strokeWidth: options.strokeWidth,
                                        fillRule: options.fillRule
                                      });
                                })
                            }),
                        JsxRuntime.jsx(Input.make, {
                              type_: "number",
                              label: "CanvasWidth",
                              value: options.canvasWidth.toString(),
                              onChange: (function (value) {
                                  onChange({
                                        text: options.text,
                                        fontSize: options.fontSize,
                                        canvasWidth: Input.getInt(value),
                                        letterSpacing: options.letterSpacing,
                                        lineHeight: options.lineHeight,
                                        align: options.align,
                                        fill: options.fill,
                                        stroke: options.stroke,
                                        strokeWidth: options.strokeWidth,
                                        fillRule: options.fillRule
                                      });
                                })
                            }),
                        JsxRuntime.jsx(Input.make, {
                              type_: "number",
                              label: "LetterSpacing",
                              value: options.letterSpacing.toString(),
                              onChange: (function (value) {
                                  onChange({
                                        text: options.text,
                                        fontSize: options.fontSize,
                                        canvasWidth: options.canvasWidth,
                                        letterSpacing: Input.getInt(value),
                                        lineHeight: options.lineHeight,
                                        align: options.align,
                                        fill: options.fill,
                                        stroke: options.stroke,
                                        strokeWidth: options.strokeWidth,
                                        fillRule: options.fillRule
                                      });
                                })
                            }),
                        JsxRuntime.jsx(Input.make, {
                              type_: "number",
                              label: "LineHeight",
                              value: options.lineHeight.toString(),
                              onChange: (function (value) {
                                  onChange({
                                        text: options.text,
                                        fontSize: options.fontSize,
                                        canvasWidth: options.canvasWidth,
                                        letterSpacing: options.letterSpacing,
                                        lineHeight: Input.getFloat(value),
                                        align: options.align,
                                        fill: options.fill,
                                        stroke: options.stroke,
                                        strokeWidth: options.strokeWidth,
                                        fillRule: options.fillRule
                                      });
                                })
                            })
                      ],
                      className: "flex gap-1"
                    }),
                JsxRuntime.jsxs("div", {
                      children: [
                        JsxRuntime.jsx(Input.make, {
                              type_: "color",
                              label: "Fill Color",
                              value: options.fill,
                              onChange: (function (value) {
                                  onChange({
                                        text: options.text,
                                        fontSize: options.fontSize,
                                        canvasWidth: options.canvasWidth,
                                        letterSpacing: options.letterSpacing,
                                        lineHeight: options.lineHeight,
                                        align: options.align,
                                        fill: Input.getText(value),
                                        stroke: options.stroke,
                                        strokeWidth: options.strokeWidth,
                                        fillRule: options.fillRule
                                      });
                                })
                            }),
                        JsxRuntime.jsx(Input.make, {
                              type_: "color",
                              label: "Stroke Color",
                              value: options.stroke,
                              onChange: (function (value) {
                                  onChange({
                                        text: options.text,
                                        fontSize: options.fontSize,
                                        canvasWidth: options.canvasWidth,
                                        letterSpacing: options.letterSpacing,
                                        lineHeight: options.lineHeight,
                                        align: options.align,
                                        fill: options.fill,
                                        stroke: Input.getText(value),
                                        strokeWidth: options.strokeWidth,
                                        fillRule: options.fillRule
                                      });
                                })
                            }),
                        JsxRuntime.jsx(Input.make, {
                              type_: "number",
                              label: "Stroke width",
                              value: options.strokeWidth.toString(),
                              onChange: (function (value) {
                                  onChange({
                                        text: options.text,
                                        fontSize: options.fontSize,
                                        canvasWidth: options.canvasWidth,
                                        letterSpacing: options.letterSpacing,
                                        lineHeight: options.lineHeight,
                                        align: options.align,
                                        fill: options.fill,
                                        stroke: options.stroke,
                                        strokeWidth: Input.getFloat(value),
                                        fillRule: options.fillRule
                                      });
                                })
                            }),
                        JsxRuntime.jsx(Select.make, {
                              label: "Fill Rule",
                              options: [
                                [
                                  "evenodd",
                                  "Even odd"
                                ],
                                [
                                  "nonzero",
                                  "Non zero"
                                ]
                              ],
                              onChange: (function (value) {
                                  var tmp;
                                  switch (value) {
                                    case "evenodd" :
                                        tmp = "evenodd";
                                        break;
                                    case "nonzero" :
                                        tmp = "nonzero";
                                        break;
                                    default:
                                      tmp = "evenodd";
                                  }
                                  onChange({
                                        text: options.text,
                                        fontSize: options.fontSize,
                                        canvasWidth: options.canvasWidth,
                                        letterSpacing: options.letterSpacing,
                                        lineHeight: options.lineHeight,
                                        align: options.align,
                                        fill: options.fill,
                                        stroke: options.stroke,
                                        strokeWidth: options.strokeWidth,
                                        fillRule: tmp
                                      });
                                }),
                              value: match === "evenodd" ? "evenodd" : "nonzero"
                            }),
                        JsxRuntime.jsx(Select.make, {
                              label: "Align",
                              options: [
                                [
                                  "left",
                                  "Left"
                                ],
                                [
                                  "center",
                                  "Center"
                                ],
                                [
                                  "right",
                                  "Right"
                                ]
                              ],
                              onChange: (function (value) {
                                  var tmp;
                                  switch (value) {
                                    case "center" :
                                        tmp = "center";
                                        break;
                                    case "left" :
                                        tmp = "left";
                                        break;
                                    case "right" :
                                        tmp = "right";
                                        break;
                                    default:
                                      tmp = "left";
                                  }
                                  onChange({
                                        text: options.text,
                                        fontSize: options.fontSize,
                                        canvasWidth: options.canvasWidth,
                                        letterSpacing: options.letterSpacing,
                                        lineHeight: options.lineHeight,
                                        align: tmp,
                                        fill: options.fill,
                                        stroke: options.stroke,
                                        strokeWidth: options.strokeWidth,
                                        fillRule: options.fillRule
                                      });
                                }),
                              value: match$1 === "right" ? "right" : (
                                  match$1 === "center" ? "center" : "left"
                                )
                            })
                      ],
                      className: "flex gap-1"
                    })
              ]
            });
}

var make = OptionsForm;

export {
  make ,
}
/* Input Not a pure module */
